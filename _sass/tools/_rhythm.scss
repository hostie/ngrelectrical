//-------------------------------------
//  VERTICAL RHYTHM
//-------------------------------------

// Create a fully formed type style (sizing and vertical rhythm) by passing in a
// single value, e.g.:
//
// .foo {
//     @include set-font-size(12px);
// }
//
// This will generate a rem-based font-size with its pixel fallback, as well as
// a unitless line-height which will place the element on your baseline, e.g.:
//
// .foo {
//     font-size: 12px;
//     font-size: 0.75rem;
//     line-height: 2;
// }
//
// If you do not want inuitcss to generate you a line-height automatically, you
// simply pass in your own as a second paramater:
//
// .foo {
//     @include set-font-size(12px, 1.5);
// }
//
// This will yield:
//
// .foo {
//     font-size: 12px;
//     font-size: 0.75rem;
//     line-height: 1.5;
// }
//
// This parameter can be any integer, ‘inherit’, or ‘normal’. If you don’t want
// a line-height at all, pass in a second paramater of ‘none’ or ‘false’:
//
// .foo {
//     @include set-font-size(12px, none);
// }
//
// This will yield:
//
// .foo {
//     font-size: 12px;
//     font-size: 0.75rem;
// }

@mixin set-font-size($set-font-size, $set-line-height: auto) {
    font-size: $set-font-size;
    font-size: ($set-font-size / $base-font-size) * 1rem;

    @if $set-line-height == auto {
        line-height: ceil($set-font-size / $base-line-height) * ($base-line-height / $set-font-size);
    }

    @else {

        @if (type-of($set-line-height) == number or $set-line-height == inherit or $set-line-height == normal) {
            line-height: $set-line-height;
        }

        @elseif ($set-line-height != none and $set-line-height != false) {
            @warn "D’oh! ‘#{$set-line-height}’ is not a valid value for `line-height`.";
        }

    }

}

// Apply leading whitespace
@mixin leader($lines: 1, $property: margin) {
    #{$property}-top: $spacing-unit * $lines;
}

// Apply trailing whitespace
@mixin trailer($lines: 1, $property: margin) {
    #{$property}-bottom: $spacing-unit * $lines;
}

// Apply leading whitespace as padding
@mixin padding-leader($lines: 1) {
    @include leader($lines, padding);
}

// Apply trailing whitespace as padding
@mixin padding-trailer($lines: 1) {
    @include trailer($lines, padding);
}

// Apply leading and trailing whitespace together.
// Defaults to equal margins above and below and no padding.
@mixin rhythm($leader: 1, $padding-leader: 0, $padding-trailer: $padding-leader, $trailer: $leader) {
    @include leader($leader);
    @include trailer($trailer);
    @include padding-leader($padding-leader);
    @include padding-trailer($padding-trailer);
}
